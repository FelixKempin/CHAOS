version: '3.8'

services:
  redis:
    image: redis:7
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis_data:/data

  web:
    build: .
    env_file: .env
    environment:
      - REDIS_URL=${REDIS_URL}
      - GOOGLE_APPLICATION_CREDENTIALS_JSON_B64=${GOOGLE_APPLICATION_CREDENTIALS_JSON_B64}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_PORT=${DATABASE_PORT}
      - DEBUG=${DEBUG}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    ports:
      - "8000:8000"
    depends_on:
      - redis
    command: >
      sh -c "
        python manage.py makemigrations --noinput &&
        python manage.py migrate --noinput &&
        python manage.py collectstatic --noinput &&
        gunicorn CHAOS.wsgi:application --bind 0.0.0.0:8000 --workers 2
      "

  worker:
    build: .
    env_file: .env
    environment:
      - REDIS_URL=${REDIS_URL}
      - GOOGLE_APPLICATION_CREDENTIALS_JSON_B64=${GOOGLE_APPLICATION_CREDENTIALS_JSON_B64}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_PORT=${DATABASE_PORT}
      - DEBUG=${DEBUG}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      - redis
    command: celery -A CHAOS worker --loglevel=debug --pool=solo

  beat:
    build: .
    env_file: .env
    environment:
      - REDIS_URL=${REDIS_URL}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      - redis
    command: celery -A CHAOS beat --loglevel=info

volumes:
  redis_data:
