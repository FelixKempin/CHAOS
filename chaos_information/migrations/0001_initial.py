# Generated by Django 5.2.1 on 2025-06-17 01:56

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('waiting', 'Waiting'), ('ready', 'Ready'), ('success', 'Success'), ('failed', 'Failed'), ('rejected', 'Rejected'), ('information_needed', 'Information needed')], db_index=True, default='waiting', max_length=20)),
                ('required_check', models.BooleanField(default=False)),
                ('approved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('prerequisites', models.ManyToManyField(blank=True, help_text='Actions, die vor dieser hier erfolgreich laufen müssen', related_name='dependents', to='chaos_information.action')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='ReviewProposal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proposed_type', models.CharField(choices=[('thread', 'Thread'), ('subject', 'Subject')], max_length=20)),
                ('name', models.CharField(max_length=100)),
                ('hierarchy', models.TextField(help_text='JSON-Array der Thread-Hierarchie')),
                ('source_text', models.TextField(help_text='Auszug des Originaltexts')),
                ('reviewed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Review Proposal',
                'verbose_name_plural': 'Review Proposals',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TextInput',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('text', models.TextField()),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Vault',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserAction',
            fields=[
                ('action_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='chaos_information.action')),
                ('user_comment', models.TextField(blank=True)),
            ],
            bases=('chaos_information.action',),
        ),
        migrations.CreateModel(
            name='Folder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='chaos_information.folder')),
                ('vault', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='folders', to='chaos_information.vault')),
            ],
            options={
                'ordering': ['parent__id', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Information',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('datetime', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('status', models.CharField(choices=[('pending', 'Zu prüfen'), ('confirmed', 'Bestätigt'), ('archived', 'Abgelegt')], db_index=True, default='pending', max_length=20)),
                ('context', models.TextField(blank=True)),
                ('information_short', models.TextField(blank=True)),
                ('information_long', models.TextField(blank=True)),
                ('information_original', models.TextField(blank=True)),
                ('draft', models.BooleanField(default=False)),
                ('evaluated', models.BooleanField(default=False)),
                ('last_edited', models.DateTimeField(auto_now=True)),
                ('last_seen_by_user', models.DateTimeField(blank=True, null=True)),
                ('last_seen_by_agent', models.DateTimeField(blank=True, null=True)),
                ('last_relevance_evaluation', models.DateTimeField(blank=True, null=True)),
                ('relevance_score', models.FloatField(default=1.0)),
                ('object_id', models.CharField(db_index=True, max_length=36)),
                ('object_type_string', models.CharField(db_index=True, help_text='Redundanter String des Objekttyps', max_length=50)),
                ('content_type', models.ForeignKey(limit_choices_to={'model__in': ('img_document', 'pdf_document', 'csv_document', 'text_document', 'markdown_document', 'audio_document', 'contact', 'message', 'todo', 'appointment', 'requiredinformation', 'recurrencerule', 'text_input')}, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('folder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='infos', to='chaos_information.folder')),
                ('tags', models.ManyToManyField(blank=True, related_name='informations', to='chaos_information.tag')),
                ('vault', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='informations', to='chaos_information.vault')),
            ],
            options={
                'ordering': ['-datetime'],
            },
        ),
        migrations.CreateModel(
            name='RelevanceEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.PositiveSmallIntegerField()),
                ('timestamp', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('information', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relevance_events', to='chaos_information.information')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='RequiredInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('waiting', 'Waiting'), ('provided', 'Provided')], default='waiting', max_length=20)),
                ('answer', models.TextField(blank=True)),
                ('action', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='required_informations', to='chaos_information.action')),
                ('information', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='chaos_information.information')),
            ],
            options={
                'unique_together': {('action', 'information')},
            },
        ),
        migrations.AddIndex(
            model_name='information',
            index=models.Index(fields=['vault', 'status', 'datetime'], name='chaos_infor_vault_i_665add_idx'),
        ),
        migrations.AddIndex(
            model_name='information',
            index=models.Index(fields=['content_type', 'object_id'], name='chaos_infor_content_44ae0c_idx'),
        ),
        migrations.AddIndex(
            model_name='information',
            index=models.Index(fields=['object_type_string'], name='chaos_infor_object__d24501_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='information',
            unique_together={('content_type', 'object_id')},
        ),
        migrations.AlterUniqueTogether(
            name='folder',
            unique_together={('vault', 'parent', 'name')},
        ),
    ]
